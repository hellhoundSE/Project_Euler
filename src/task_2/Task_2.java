package task_2;

public class Task_2 {
	
	
	public static int limit = 4000000;

	public static void main(String[] args) {
		/*
		 * Each new term in the Fibonacci sequence is generated by adding 
		 * the previous two terms. By starting with 1 and 2, the first 10 terms will be:

			1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

			By considering the terms in the Fibonacci sequence whose 
			values do not exceed four million, find the sum of the even-valued terms.
			
			O(n)
		 */

		// 0 - first Fibonacci number
		// 1 - second Fibonacci number
		System.out.println(findSumOfEvenLessThen(1, 0, 0));
	}
	
	// summing all even Fibonacci numbers using recursion
	public static int findSumOfEvenLessThen(int last,int prev,int sum) {
		if(last < limit) {
			if(last % 2 == 0) {
				sum+=last;
			}
			return findSumOfEvenLessThen(last+prev,last,sum);
		}
			return sum;
	}

}
